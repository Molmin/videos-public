01

这是一个博弈论问题
Alice 和 Bob 正在玩游戏
游戏中有三个整数 a1, a2 和 a3
Alice 和 Bob 轮流操作
Alice 先手
每次操作可以选择两个互不相同的整数 ai 和 aj 改变它们的值
设更改后的值为 ai 和 aj，满足 ai+aj=ai'+aj'
且 ai' 和 aj' 的差小于 ai 和 aj 的差时操作才是合法的
不能进行合法操作者输
问谁有必胜策略？

02

这个问题要求你把 x1, x2 和 x3 变为 x1+k, x2-k 和 x3
假设三个数按照从小到大的顺序排列
则这个操作等价于把所有数减去 x1 后的情形
所以我们只需要考虑满足 0 小于等于 x 小于等于 y 的 (0,x,y) 情形

03

这里我使用的时间复杂度是立方级别的动态规划算法
暴力枚举每个 (0,x,y) 状态的下一步操作
现在我已经得到了结果

04

result[i][j] 表示状态 (0,i,j) 是否是必胜的状态
下面对操作前两个数
后两个数
第一个数和第三个数三种情况
分类讨论进行枚举转移

05

这是我根据程序运行的结果绘制成的图表
其中
第 0 行第 0 列是红色格子
表示 (0,0,0) 不是一个必胜的状态
再例如第 6 行第 6 列的绿色格子
则表示 (0,6,6) 是必胜状态

06

根据上面的结果可以很明显地看出
只有 (0,0,n) 和 (0,n,n) 两种情形可能是必败的状态
而 (0,n,n) 同时减去 n
就等价于 (-n,0,0)
也就等价于 (0,0,n)
所以我们只需要考虑 (0,0,n) 的情形

07

下面我们来观察一下满足 (0,0,n) 是必胜状态的 n 的特点
现在显示出的 12 个数都是必胜的 n
显然
它们都是偶数
把它们的素因子 2 全部提取出来
容易发现
2 的指数都是奇数
也就是说
这些 n 都可以表示成这样的形式
下面我们尝试对证明进行探索
